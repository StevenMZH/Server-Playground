services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    depends_on:
      - nginx-proxy
    restart: always
    environment:
      DEFAULT_EMAIL: smendozasymzh@gmail.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: frontend
    expose:
      - "80"
    environment:
      VIRTUAL_HOST: testings.chepetronica.online
      LETSENCRYPT_HOST: testings.chepetronica.online
      LETSENCRYPT_EMAIL: smendozasymzh@gmail.com
    depends_on:
      - backend
    restart: always


  backend:
    build: ./backend
    container_name: backend
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000
    expose:
      - "8000"
    env_file:
      - .env.prod
    environment:
      VIRTUAL_HOST: api.chepetronica.online
      LETSENCRYPT_HOST: api.chepetronica.online
      LETSENCRYPT_EMAIL: smendozasymzh@gmail.com
    depends_on:
      - postgres
    restart: always

  postgres:
    image: postgres:15
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod
    restart: always

volumes:
  postgres_data:
